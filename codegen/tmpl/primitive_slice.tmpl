
func read{{.FieldName}}(x *{{.OwnerType}}) ({{.ParquetType}}, []uint8, []uint8) {
	var vals {{.ParquetType}}
	var defs, reps []uint8
	var lastRep uint8

	if len(x.{{.FieldName}}) == 0 {
		defs = append(defs, 0)
		reps = append(reps, lastRep)
	} else {
		for i0, x0 := range x.{{.FieldName}} {
			if i0 == 1 {
				lastRep = 1
			}
			defs = append(defs, 1)
			reps = append(reps, lastRep)
			vals = append(vals, x0)
		}
	}
	return vals, defs, reps
}

func write{{.FieldName}}(x *{{.OwnerType}}, vals {{.ParquetType}}, defs, reps []uint8) (int, int) {
	var nVals, nLevels int
	ind := make(indices, 1)
	for i := range defs {
		def := defs[i]
		rep := reps[i]
		if i > 0 && rep == 0 {
			break
		}
		nLevels++
		ind.rep(rep)

		switch def {
		case 1:
			switch rep {
			case 0:
				x.{{.FieldName}} = {{.ParquetType}}{vals[nVals]}
			case 1:
				x.{{.FieldName}} = append(x.{{.FieldName}}, vals[nVals])
			}
			nVals++
		}
	}

	return nVals, nLevels
}


